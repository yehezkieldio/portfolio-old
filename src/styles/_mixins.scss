@use "sass:math";

@mixin breakpoint($point) {
    @if $point == extra_small_devices {
        @media only screen and (max-width: 600px) {
            @content;
        }
    } @else if $point == small_devices {
        @media only screen and (min-width: 600px) {
            @content;
        }
    } @else if $point == medium_devices {
        @media only screen and (max-width: 768px) {
            @content;
        }
    } @else if $point == large_devices {
        @media only screen and (min-width: 992px) {
            @content;
        }
    } @else if $point == extra_large_devices {
        @media only screen and (min-width: 1200px) {
            @content;
        }
    } @else if $point == potrait_tablet {
        @media only screen and (min-width: 361px) {
            @content;
        }
    } @else if $point == landscape_tablet {
        @media only screen and (min-width: 768px) {
            @content;
        }
    }
}

@function calculateRem($size) {
    $remSize: math.div($size, 16px);
    @return $remSize * 1rem;
}

@mixin font-size($size) {
    font-size: $size;
    font-size: calculateRem($size);
}

@mixin letter-spacing($spacing) {
    letter-spacing: calculateRem($spacing);
    margin-right: -#{calculateRem($spacing)};
}

@mixin font-style($font-size, $line-height: normal, $letter-spacing: normal, $font-weight: normal) {
    @include font-size($font-size);

    @if $line-height == normal {
        line-height: normal;
    } @else {
        line-height: math.div($line-height, $font-size);
    }

    @if $letter-spacing == normal {
        letter-spacing: normal;
    } @else {
        @include letter-spacing($letter-spacing);
    }

    @if $font-weight == normal {
        font-weight: 400;
    } @else {
        font-weight: $font-weight;
    }
}

@mixin map-to-css-variables($map: ()) {
    @each $key, $value in $map {
        --#{$key}: #{$value};
    }
}
